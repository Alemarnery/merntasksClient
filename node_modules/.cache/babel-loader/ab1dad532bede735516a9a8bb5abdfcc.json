{"ast":null,"code":"var _jsxFileName = \"/Users/alemar/Workspace/MERNTASKS/cliente/src/components/proyectos/NuevoProyecto.js\";\nimport React, { Fragment, useState, useContext } from \"react\";\nimport proyectoContext from \"../../context/proyectos/proyectoContext\";\n\nconst NuevoProyecto = () => {\n  // Obtener el state del formulario\n  const proyectosContext = useContext(proyectoContext);\n  const {\n    formulario,\n    errorformulario,\n    mostrarFormulario,\n    agregarProyecto,\n    mostrarError\n  } = proyectosContext; // State para Proyecto\n\n  const [proyecto, guardarProyecto] = useState({\n    nombre: \"\"\n  }); // Extraer nombre de proyecto\n\n  const {\n    nombre\n  } = proyecto; // Lee los contenidos del input\n\n  const onChangeProyecto = e => {\n    guardarProyecto({ ...proyecto,\n      [e.target.name]: e.target.value\n    });\n  }; // Cuando el usuario envia un proyecto\n\n\n  const onSubmitProyecto = e => {\n    e.preventDefault(); // Validar el proyecto\n\n    if (nombre === \"\") {\n      mostrarError();\n      return;\n    } // agregar al state\n\n\n    agregarProyecto(proyecto); // Reiniciar el form\n\n    guardarProyecto({\n      nombre: \"\"\n    });\n  }; // Mostrar el formulario\n\n\n  const onClickFormulario = () => {\n    mostrarFormulario();\n  };\n\n  return /*#__PURE__*/React.createElement(Fragment, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 56,\n      columnNumber: 5\n    }\n  }, /*#__PURE__*/React.createElement(\"button\", {\n    \"data-cy\": \"Nuevo-proyecto\",\n    type: \"button\",\n    className: \"btn btn-block btn-primario\",\n    onClick: onClickFormulario,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 57,\n      columnNumber: 7\n    }\n  }, \"Nuevo Proyecto\"), formulario ? /*#__PURE__*/React.createElement(\"form\", {\n    className: \"formulario-nuevo-proyecto\",\n    onSubmit: onSubmitProyecto,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 67,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(\"input\", {\n    type: \"text\",\n    className: \"input-text\",\n    placeholder: \"Nombre Proyecto\",\n    name: \"nombre\",\n    value: nombre,\n    onChange: onChangeProyecto,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 68,\n      columnNumber: 11\n    }\n  }), /*#__PURE__*/React.createElement(\"input\", {\n    \"data-cy\": \"submit-nuevo-proyecto\",\n    type: \"submit\",\n    className: \"btn btn-primario btn-block\",\n    value: \"Agregar Proyecto\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 77,\n      columnNumber: 11\n    }\n  })) : null, errorformulario ? /*#__PURE__*/React.createElement(\"p\", {\n    className: \"mensaje error\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 87,\n      columnNumber: 9\n    }\n  }, \"El nombre del Proyecto es obligatorio\") : null);\n};\n\nexport default NuevoProyecto;","map":{"version":3,"sources":["/Users/alemar/Workspace/MERNTASKS/cliente/src/components/proyectos/NuevoProyecto.js"],"names":["React","Fragment","useState","useContext","proyectoContext","NuevoProyecto","proyectosContext","formulario","errorformulario","mostrarFormulario","agregarProyecto","mostrarError","proyecto","guardarProyecto","nombre","onChangeProyecto","e","target","name","value","onSubmitProyecto","preventDefault","onClickFormulario"],"mappings":";AAAA,OAAOA,KAAP,IAAgBC,QAAhB,EAA0BC,QAA1B,EAAoCC,UAApC,QAAsD,OAAtD;AACA,OAAOC,eAAP,MAA4B,yCAA5B;;AAEA,MAAMC,aAAa,GAAG,MAAM;AAC1B;AACA,QAAMC,gBAAgB,GAAGH,UAAU,CAACC,eAAD,CAAnC;AACA,QAAM;AACJG,IAAAA,UADI;AAEJC,IAAAA,eAFI;AAGJC,IAAAA,iBAHI;AAIJC,IAAAA,eAJI;AAKJC,IAAAA;AALI,MAMFL,gBANJ,CAH0B,CAW1B;;AACA,QAAM,CAACM,QAAD,EAAWC,eAAX,IAA8BX,QAAQ,CAAC;AAC3CY,IAAAA,MAAM,EAAE;AADmC,GAAD,CAA5C,CAZ0B,CAgB1B;;AACA,QAAM;AAAEA,IAAAA;AAAF,MAAaF,QAAnB,CAjB0B,CAmB1B;;AACA,QAAMG,gBAAgB,GAAIC,CAAD,IAAO;AAC9BH,IAAAA,eAAe,CAAC,EACd,GAAGD,QADW;AAEd,OAACI,CAAC,CAACC,MAAF,CAASC,IAAV,GAAiBF,CAAC,CAACC,MAAF,CAASE;AAFZ,KAAD,CAAf;AAID,GALD,CApB0B,CA2B1B;;;AACA,QAAMC,gBAAgB,GAAIJ,CAAD,IAAO;AAC9BA,IAAAA,CAAC,CAACK,cAAF,GAD8B,CAG9B;;AACA,QAAIP,MAAM,KAAK,EAAf,EAAmB;AACjBH,MAAAA,YAAY;AACZ;AACD,KAP6B,CAS9B;;;AACAD,IAAAA,eAAe,CAACE,QAAD,CAAf,CAV8B,CAY9B;;AACAC,IAAAA,eAAe,CAAC;AACdC,MAAAA,MAAM,EAAE;AADM,KAAD,CAAf;AAGD,GAhBD,CA5B0B,CA8C1B;;;AACA,QAAMQ,iBAAiB,GAAG,MAAM;AAC9Bb,IAAAA,iBAAiB;AAClB,GAFD;;AAIA,sBACE,oBAAC,QAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACE;AACE,eAAQ,gBADV;AAEE,IAAA,IAAI,EAAC,QAFP;AAGE,IAAA,SAAS,EAAC,4BAHZ;AAIE,IAAA,OAAO,EAAEa,iBAJX;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,sBADF,EAUGf,UAAU,gBACT;AAAM,IAAA,SAAS,EAAC,2BAAhB;AAA4C,IAAA,QAAQ,EAAEa,gBAAtD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACE;AACE,IAAA,IAAI,EAAC,MADP;AAEE,IAAA,SAAS,EAAC,YAFZ;AAGE,IAAA,WAAW,EAAC,iBAHd;AAIE,IAAA,IAAI,EAAC,QAJP;AAKE,IAAA,KAAK,EAAEN,MALT;AAME,IAAA,QAAQ,EAAEC,gBANZ;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADF,eAUE;AACE,eAAQ,uBADV;AAEE,IAAA,IAAI,EAAC,QAFP;AAGE,IAAA,SAAS,EAAC,4BAHZ;AAIE,IAAA,KAAK,EAAC,kBAJR;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAVF,CADS,GAkBP,IA5BN,EA8BGP,eAAe,gBACd;AAAG,IAAA,SAAS,EAAC,eAAb;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,6CADc,GAEZ,IAhCN,CADF;AAoCD,CAvFD;;AAyFA,eAAeH,aAAf","sourcesContent":["import React, { Fragment, useState, useContext } from \"react\";\nimport proyectoContext from \"../../context/proyectos/proyectoContext\";\n\nconst NuevoProyecto = () => {\n  // Obtener el state del formulario\n  const proyectosContext = useContext(proyectoContext);\n  const {\n    formulario,\n    errorformulario,\n    mostrarFormulario,\n    agregarProyecto,\n    mostrarError,\n  } = proyectosContext;\n\n  // State para Proyecto\n  const [proyecto, guardarProyecto] = useState({\n    nombre: \"\",\n  });\n\n  // Extraer nombre de proyecto\n  const { nombre } = proyecto;\n\n  // Lee los contenidos del input\n  const onChangeProyecto = (e) => {\n    guardarProyecto({\n      ...proyecto,\n      [e.target.name]: e.target.value,\n    });\n  };\n\n  // Cuando el usuario envia un proyecto\n  const onSubmitProyecto = (e) => {\n    e.preventDefault();\n\n    // Validar el proyecto\n    if (nombre === \"\") {\n      mostrarError();\n      return;\n    }\n\n    // agregar al state\n    agregarProyecto(proyecto);\n\n    // Reiniciar el form\n    guardarProyecto({\n      nombre: \"\",\n    });\n  };\n\n  // Mostrar el formulario\n  const onClickFormulario = () => {\n    mostrarFormulario();\n  };\n\n  return (\n    <Fragment>\n      <button\n        data-cy=\"Nuevo-proyecto\"\n        type=\"button\"\n        className=\"btn btn-block btn-primario\"\n        onClick={onClickFormulario}\n      >\n        Nuevo Proyecto\n      </button>\n\n      {formulario ? (\n        <form className=\"formulario-nuevo-proyecto\" onSubmit={onSubmitProyecto}>\n          <input\n            type=\"text\"\n            className=\"input-text\"\n            placeholder=\"Nombre Proyecto\"\n            name=\"nombre\"\n            value={nombre}\n            onChange={onChangeProyecto}\n          />\n\n          <input\n            data-cy=\"submit-nuevo-proyecto\"\n            type=\"submit\"\n            className=\"btn btn-primario btn-block\"\n            value=\"Agregar Proyecto\"\n          />\n        </form>\n      ) : null}\n\n      {errorformulario ? (\n        <p className=\"mensaje error\">El nombre del Proyecto es obligatorio</p>\n      ) : null}\n    </Fragment>\n  );\n};\n\nexport default NuevoProyecto;\n"]},"metadata":{},"sourceType":"module"}